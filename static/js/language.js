// –î–æ–±–∞–≤–∏–º —Ñ–ª–∞–≥ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
window.isLanguageChanging = false;

async function toggleLanguage() {
    try {
        console.log('üåê toggleLanguage called');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –º–µ–Ω—é
        const savedMenuText = localStorage.getItem('currentMenuText');
        
        // –ú–µ–Ω—è–µ–º —è–∑—ã–∫
        const currentLang = document.documentElement.lang;
        console.log('üåê Current language:', currentLang);
        const newLang = currentLang === 'ru' ? 'en' : 'ru';
        console.log('üåê Switching to:', newLang);
        document.documentElement.lang = newLang;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —è–∑—ã–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        console.log('üåê Saving language to server...');
        const response = await fetch('/api/set_language', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ language: newLang })
        });
        console.log('üåê Server response:', response.status);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        console.log('üåê Updating interface...');
        updateInterface();
        console.log('üåê Language toggle completed');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é
        if (savedMenuText) {
            const currentPage = document.getElementById('currentPage');
            if (currentPage) {
                currentPage.textContent = savedMenuText;
            }
        }
        
    } catch (error) {
        console.error('Error toggling language:', error);
    }
}

function updateInterface() {
    console.log('updateInterface called');
    
    if (typeof TRANSLATIONS === 'undefined') {
        console.error('TRANSLATIONS not found');
        return;
    }
    
    const currentLang = document.documentElement.lang || 'ru';
    console.log('Current language:', currentLang);
    console.log('TRANSLATIONS.ru keys:', Object.keys(TRANSLATIONS.ru).length);
    console.log('TRANSLATIONS.en keys:', Object.keys(TRANSLATIONS.en).length);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å data-translate
    let translated = 0, missing = 0;
    document.querySelectorAll('[data-translate]').forEach(element => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å id="currentPage"
        if (element.id === 'currentPage') return;
        
        const key = element.getAttribute('data-translate');
        if (key && TRANSLATIONS[currentLang] && TRANSLATIONS[currentLang][key]) {
            element.textContent = TRANSLATIONS[currentLang][key];
            translated++;
        } else if (key) {
            console.warn(`Missing translation for key: ${key} (lang: ${currentLang})`);
            missing++;
        }
    });
    console.log(`Translated: ${translated}, Missing: ${missing}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å data-translate-placeholder
    document.querySelectorAll('[data-translate-placeholder]').forEach(element => {
        const key = element.getAttribute('data-translate-placeholder');
        if (key && TRANSLATIONS[currentLang] && TRANSLATIONS[currentLang][key]) {
            element.placeholder = TRANSLATIONS[currentLang][key];
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º placeholder –¥–ª—è –ø–æ–∏—Å–∫–∞ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    const searchInput = document.getElementById('tickerSearch');
    if (searchInput && TRANSLATIONS[currentLang]) {
        searchInput.placeholder = TRANSLATIONS[currentLang]['searchPlaceholder'] || '–ü–æ–∏—Å–∫ —Ç–∏–∫–µ—Ä–∞...';
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ BotsManager, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (typeof window.botsManager !== 'undefined' && window.botsManager.loadAccountInfo) {
        window.botsManager.loadAccountInfo();
    }
    
    console.log('Interface updated successfully');
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.toggleLanguage = toggleLanguage;
window.updateInterface = updateInterface; 