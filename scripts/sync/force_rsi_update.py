#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ RSI –¥–∞–Ω–Ω—ã—Ö"""

import requests
import sys
import io
import time

sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def force_update():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç RSI –¥–∞–Ω–Ω—ã–µ"""
    try:
        print("üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï RSI")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç
        r = requests.get('http://localhost:5001/api/bots/coins-with-rsi')
        coins = r.json().get('coins', {})
        symbols = list(coins.keys())
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(symbols)} –º–æ–Ω–µ—Ç")
        print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º RSI –¥–∞–Ω–Ω—ã–µ...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–Ω–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
        test_symbols = ['BIO', 'BTC', 'ETH', 'SOL', 'BNB']
        
        for symbol in test_symbols:
            if symbol in symbols:
                print(f"  üîÑ {symbol}...", end='', flush=True)
                r = requests.get(f'http://localhost:5001/api/bots/coins-with-rsi?refresh_symbol={symbol}')
                if r.status_code == 200:
                    print(" ‚úÖ")
                else:
                    print(f" ‚ùå ({r.status_code})")
                time.sleep(0.5)
        
        print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        r = requests.get('http://localhost:5001/api/bots/coins-with-rsi')
        coins = r.json().get('coins', {})
        
        for symbol in test_symbols:
            if symbol in coins:
                coin = coins[symbol]
                print(f"\n{symbol}:")
                print(f"  RSI: {coin.get('rsi6h')}")
                print(f"  Signal: {coin.get('signal')}")
                print(f"  RSI Zone: {coin.get('rsi_zone')}")
                
                tf = coin.get('time_filter_info', {})
                if tf:
                    print(f"  Time Filter: {'‚ùå Blocked' if tf.get('blocked') else '‚úÖ Passed'}")
                    print(f"    Reason: {tf.get('reason')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    force_update()

