#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç
"""
import sys
import io
import requests
import time

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ Windows
if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def check_all_mature_coins():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑—Ä–µ–ª–æ—Å—Ç—å –≤—Å–µ—Ö –º–æ–Ω–µ—Ç —á–µ—Ä–µ–∑ API"""
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–†–ï–õ–û–°–¢–ò –í–°–ï–• –ú–û–ù–ï–¢")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç
        print("üìä –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç...")
        response = requests.get('http://localhost:5001/api/bots/coins-with-rsi', timeout=30)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–Ω–µ—Ç: {response.status_code}")
            return
        
        data = response.json()
        coins = data.get('coins', {})
        
        if not coins:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –º–æ–Ω–µ—Ç–∞—Ö")
            return
        
        print(f"üìà –ù–∞–π–¥–µ–Ω–æ {len(coins)} –º–æ–Ω–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑—Ä–µ–ª–æ—Å—Ç–∏...")
        
        mature_count = 0
        immature_count = 0
        error_count = 0
        
        for i, symbol in enumerate(coins.keys(), 1):
            try:
                print(f"[{i}/{len(coins)}] –ü—Ä–æ–≤–µ—Ä—è–µ–º {symbol}...", end=" ")
                
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º RSI –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–Ω–µ—Ç—ã
                update_response = requests.get(f'http://localhost:5001/api/bots/coins-with-rsi?refresh_symbol={symbol}', timeout=15)
                
                if update_response.status_code == 200:
                    print("‚úÖ")
                    mature_count += 1
                else:
                    print(f"‚ùå {update_response.status_code}")
                    error_count += 1
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å API
                time.sleep(0.1)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 50 –º–æ–Ω–µ—Ç
                if i % 50 == 0:
                    print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {i}/{len(coins)} –º–æ–Ω–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                error_count += 1
        
        print("\n" + "=" * 60)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {mature_count}")
        print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
        print(f"üìà –í—Å–µ–≥–æ –º–æ–Ω–µ—Ç: {len(coins)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç —Ç–µ–ø–µ—Ä—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç...")
        try:
            import json
            with open('data/mature_coins.json', 'r', encoding='utf-8') as f:
                mature_data = json.load(f)
            print(f"üèÜ –ó—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: {len(mature_data)}")
            if mature_data:
                print(f"üìù –ü—Ä–∏–º–µ—Ä—ã –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç: {list(mature_data.keys())[:10]}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    check_all_mature_coins()
