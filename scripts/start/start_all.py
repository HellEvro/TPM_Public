#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ InfoBot
- –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (app.py) –Ω–∞ –ø–æ—Ä—Ç—É 5000
- –°–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤ (bots.py) –Ω–∞ –ø–æ—Ä—Ç—É 5001
"""

import os
import sys
import time
import signal
import subprocess
import threading
from datetime import datetime

def print_banner():
    """–ö—Ä–∞—Å–∏–≤—ã–π –±–∞–Ω–Ω–µ—Ä"""
    print("=" * 60)
    print("üöÄ InfoBot - Complete Trading System")
    print("=" * 60)
    print(f"‚è∞ Start time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("")
    print("üìä Main App:    http://localhost:5000")
    print("ü§ñ Bots API:    http://localhost:5001")
    print("")
    print("–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("  Ctrl+C - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã")
    print("=" * 60)

def start_service(name, script, port):
    """–ó–∞–ø—É—Å–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        print(f"üîÑ –ó–∞–ø—É—Å–∫ {name}...")
        
        # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
        process = subprocess.Popen(
            [sys.executable, script],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            universal_newlines=True,
            bufsize=1
        )
        
        print(f"‚úÖ {name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        return process
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {name}: {str(e)}")
        return None

def monitor_process(process, name):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤"""
    try:
        for line in iter(process.stdout.readline, ''):
            if line:
                # –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –ª–æ–≥–æ–≤ –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
                prefix = f"[{name}]"
                print(f"{prefix} {line.rstrip()}")
        
        process.stdout.close()
        return_code = process.wait()
        print(f"‚ö†Ô∏è {name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º {return_code}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ {name}: {str(e)}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_banner()
    
    processes = []
    monitor_threads = []
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    if not os.path.exists('logs'):
        os.makedirs('logs')
        print("üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs/")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤ –ø–µ—Ä–≤—ã–º
        print("\nü§ñ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –±–æ—Ç–æ–≤...")
        bots_process = start_service("BOTS", "bots.py", 5001)
        if bots_process:
            processes.append(("BOTS", bots_process))
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            monitor_thread = threading.Thread(
                target=monitor_process, 
                args=(bots_process, "BOTS"),
                daemon=True
            )
            monitor_thread.start()
            monitor_threads.append(monitor_thread)
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        time.sleep(3)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        print("\nüìä –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        app_process = start_service("MAIN", "app.py", 5000)
        if app_process:
            processes.append(("MAIN", app_process))
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            monitor_thread = threading.Thread(
                target=monitor_process, 
                args=(app_process, "MAIN"),
                daemon=True
            )
            monitor_thread.start()
            monitor_threads.append(monitor_thread)
        
        if not processes:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å!")
            return
        
        print(f"\n‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã! ({len(processes)} –∏–∑ 2)")
        print("\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤\n")
        
        # –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        try:
            while True:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ –∂–∏–≤—ã
                for name, process in processes:
                    if process.poll() is not None:
                        print(f"‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å {name} –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è!")
                        return
                
                time.sleep(1)
                
        except KeyboardInterrupt:
            print(f"\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    
    finally:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")
        
        for name, process in processes:
            try:
                print(f"‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {name}...")
                process.terminate()
                
                # –ñ–¥–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                try:
                    process.wait(timeout=5)
                    print(f"‚úÖ {name} –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
                except subprocess.TimeoutExpired:
                    print(f"‚ö†Ô∏è  {name} –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ...")
                    process.kill()
                    process.wait()
                    print(f"üî¥ {name} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ {name}: {str(e)}")
        
        print("\nüîö –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
        print(f"‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == '__main__':
    main()
