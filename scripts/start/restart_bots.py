#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ bots.py —á–µ—Ä–µ–∑ API
"""

import sys
import io
import requests
import json
import time

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è Windows
if sys.platform.startswith('win'):
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

def restart_bots_service():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ API"""
    try:
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
        response = requests.post(
            'http://localhost:5001/api/bots/restart-service',
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result.get('message', '–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–∏—Å –±–æ—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5001")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def reload_modules():
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥—É–ª–∏"""
    try:
        print("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏...")
        
        response = requests.post(
            'http://localhost:5001/api/bots/reload-modules',
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result.get('message', '–ú–æ–¥—É–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def refresh_rsi_for_coin(symbol):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç RSI –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–Ω–µ—Ç—ã"""
    try:
        print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º RSI –¥–∞–Ω–Ω—ã–µ –¥–ª—è {symbol}...")
        
        response = requests.post(
            f'http://localhost:5001/api/bots/refresh-rsi/{symbol}',
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result.get('message', f'RSI –¥–∞–Ω–Ω—ã–µ –¥–ª—è {symbol} –æ–±–Ω–æ–≤–ª–µ–Ω—ã')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è RSI: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    print("üöÄ –£–º–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ bots.py")
    print("=" * 60)
    print("üìã –ß—Ç–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–æ:")
    print("  ‚úÖ –ú–æ–¥—É–ª–∏ Python (bot_engine, bots)")
    print("  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Auto Bot")
    print("  ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–æ–≤")
    print("  ‚è≠Ô∏è  RSI –¥–∞–Ω–Ω—ã–µ –ù–ï —Ç—Ä–æ–≥–∞–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—ç—à)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ —Å–∏–º–≤–æ–ª –º–æ–Ω–µ—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    symbol_to_refresh = None
    if len(sys.argv) > 1:
        symbol_to_refresh = sys.argv[1].upper()
        print(f"\nüéØ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –æ–±–Ω–æ–≤–∏—Ç—å RSI –¥–∞–Ω–Ω—ã–µ –¥–ª—è {symbol_to_refresh}")
    
    # –®–∞–≥ 1: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
    print("\nüì¶ –®–∞–≥ 1/2: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Python –º–æ–¥—É–ª–µ–π...")
    if reload_modules():
        print("‚úÖ –ú–æ–¥—É–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π")
        return
    
    # –®–∞–≥ 2: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ (–∫–æ–Ω—Ñ–∏–≥ + —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–æ–≤)
    print("\n‚öôÔ∏è –®–∞–≥ 2/2: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ (–∫–æ–Ω—Ñ–∏–≥ + –±–æ—Ç—ã)...")
    try:
        response = requests.post(
            'http://localhost:5001/api/bots/restart-service',
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result.get('message', '–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')}")
        else:
            print(f"‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ (–∫–æ–¥: {response.status_code})")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–∏—Å: {e}")
    
    # –ñ–¥—ë–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print("\n‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    time.sleep(2)
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ–±–Ω–æ–≤–∏—Ç—å RSI –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–Ω–µ—Ç—ã
    if symbol_to_refresh:
        print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ RSI –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol_to_refresh}...")
        refresh_rsi_for_coin(symbol_to_refresh)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
    print("\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        response = requests.get('http://localhost:5001/health', timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("\n" + "=" * 60)
            print("üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("=" * 60)
        else:
            print(f"‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: python bots.py")

if __name__ == '__main__':
    main()
