#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–æ–Ω–µ—Ç
"""
import sys
import io
import requests
import json

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ Windows
if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def test_maturity_simple():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑—Ä–µ–ª–æ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–æ–Ω–µ—Ç"""
    print("üîç –¢–ï–°–¢ –ü–†–û–í–ï–†–ö–ò –ó–†–ï–õ–û–°–¢–ò")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ 3 –º–æ–Ω–µ—Ç—ã
    test_symbols = ['BTC', 'ETH', 'BIO']
    
    for symbol in test_symbols:
        print(f"\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º {symbol}:")
        try:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º RSI –¥–∞–Ω–Ω—ã–µ
            response = requests.get(f'http://localhost:5001/api/bots/coins-with-rsi?refresh_symbol={symbol}', timeout=10)
            
            if response.status_code == 200:
                print(f"  ‚úÖ RSI –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                
                # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ
                data_response = requests.get('http://localhost:5001/api/bots/coins-with-rsi', timeout=10)
                if data_response.status_code == 200:
                    data = data_response.json()
                    coins = data.get('coins', {})
                    
                    if symbol in coins:
                        coin_data = coins[symbol]
                        print(f"  üìà RSI: {coin_data.get('rsi6h', 'N/A')}")
                        print(f"  üéØ –°–∏–≥–Ω–∞–ª: {coin_data.get('signal', 'N/A')}")
                        print(f"  üïí –¢—Ä–µ–Ω–¥: {coin_data.get('trend6h', 'N/A')}")
                    else:
                        print(f"  ‚ùå –ú–æ–Ω–µ—Ç–∞ {symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö")
                else:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {data_response.status_code}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç
    print(f"\nüèÜ –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç:")
    try:
        with open('data/mature_coins.json', 'r', encoding='utf-8') as f:
            mature_data = json.load(f)
        print(f"  üìä –ó—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç: {len(mature_data)}")
        if mature_data:
            print(f"  üìù –ü—Ä–∏–º–µ—Ä—ã: {list(mature_data.keys())[:5]}")
        else:
            print(f"  ‚ö†Ô∏è –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—É—Å—Ç–æ–µ")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {e}")

if __name__ == '__main__':
    test_maturity_simple()
