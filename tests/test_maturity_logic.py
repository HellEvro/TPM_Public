#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏ –º–æ–Ω–µ—Ç"""

import requests
import sys
import io

sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def test_maturity():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –∑—Ä–µ–ª–æ—Å—Ç–∏"""
    try:
        print("üîç –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ó–†–ï–õ–û–°–¢–ò –ú–û–ù–ï–¢")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        r = requests.get('http://localhost:5001/api/bots/auto-bot')
        config = r.json().get('config', {})
        
        min_candles = config.get('min_candles_for_maturity', 200)
        min_rsi_low = config.get('min_rsi_low', 35)
        max_rsi_high = config.get('max_rsi_high', 65)
        
        print(f"\n‚öôÔ∏è –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏:")
        print(f"  –ú–∏–Ω–∏–º—É–º —Å–≤–µ—á–µ–π: {min_candles}")
        print(f"  RSI –¥–æ–ª–∂–µ–Ω –¥–æ—Å—Ç–∏–≥–∞—Ç—å: ‚â§{min_rsi_low} –∏ ‚â•{max_rsi_high}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑—Ä–µ–ª—ã–µ –º–æ–Ω–µ—Ç—ã
        r = requests.get('http://localhost:5001/api/bots/mature-coins-count')
        mature_count = r.json().get('count', 0)
        
        print(f"\nüìä –ó—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: {mature_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        r = requests.get('http://localhost:5001/api/bots/mature-coins')
        mature_data = r.json()
        mature_coins = mature_data.get('mature_coins', {})
        
        print(f"\nüìù –ü—Ä–∏–º–µ—Ä—ã –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç:")
        for i, (symbol, data) in enumerate(list(mature_coins.items())[:10]):
            print(f"  {i+1}. {symbol}")
            if isinstance(data, dict):
                details = data.get('maturity_check', {}).get('details', {})
                print(f"     –°–≤–µ—á–µ–π: {details.get('candles_count', 'N/A')}")
                print(f"     RSI –º–∏–Ω: {details.get('rsi_min', 'N/A')}")
                print(f"     RSI –º–∞–∫—Å: {details.get('rsi_max', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–Ω–µ—Ç
        print(f"\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–Ω–µ—Ç:")
        test_coins = ['BTC', 'ETH', 'BIO', 'REX', 'ZORA']
        
        r = requests.get('http://localhost:5001/api/bots/coins-with-rsi')
        all_coins = r.json().get('coins', {})
        
        for symbol in test_coins:
            if symbol in all_coins:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑—Ä–µ–ª–æ—Å—Ç—å —á–µ—Ä–µ–∑ API
                is_mature = symbol in mature_coins
                coin = all_coins[symbol]
                
                print(f"\n  {symbol}:")
                print(f"    –ó—Ä–µ–ª–∞—è: {'‚úÖ –î–∞' if is_mature else '‚ùå –ù–µ—Ç'}")
                print(f"    RSI: {coin.get('rsi6h')}")
                print(f"    Signal: {coin.get('signal')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É: –º–æ–Ω–µ—Ç—ã –±–µ–∑ 200 —Å–≤–µ—á–µ–π –ù–ï –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑—Ä–µ–ª—ã–º–∏
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤—Å–µ –∑—Ä–µ–ª—ã–µ –º–æ–Ω–µ—Ç—ã –∏–º–µ—é—Ç {min_candles}+ —Å–≤–µ—á–µ–π?")
        print(f"   (–≠—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –±–∏—Ä–∂–µ)")
        print(f"   –õ–æ–≥–∏–∫–∞ –≤ –∫–æ–¥–µ:")
        print(f"   1. –ï—Å–ª–∏ —Å–≤–µ—á–µ–π < {min_candles} ‚Üí is_mature = False")
        print(f"   2. –ï—Å–ª–∏ —Å–≤–µ—á–µ–π ‚â• {min_candles} ‚Üí –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ {min_candles} —Å–≤–µ—á–µ–π")
        print(f"   3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ RSI –¥–æ—Å—Ç–∏–≥–∞–ª ‚â§{min_rsi_low} –∏ ‚â•{max_rsi_high}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_maturity()

