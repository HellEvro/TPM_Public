"""–§–æ–Ω–æ–≤—ã–µ –≤–æ—Ä–∫–µ—Ä—ã

–í–∫–ª—é—á–∞–µ—Ç:
- auto_save_worker - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
- auto_bot_worker - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ Auto Bot
"""

import time
import logging
import threading
from datetime import datetime

logger = logging.getLogger('BotsService')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ imports_and_globals
try:
    from bots_modules.imports_and_globals import (
        shutdown_flag, system_initialized, bots_data_lock, bots_data,
        process_state, mature_coins_storage, mature_coins_lock, exchange
    )
except ImportError as e:
    print(f"Warning: Could not import globals in workers: {e}")
    shutdown_flag = threading.Event()
    system_initialized = False
    bots_data_lock = threading.Lock()
    bots_data = {}
    process_state = {}
    mature_coins_storage = {}
    mature_coins_lock = threading.Lock()
    exchange = None

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
BOT_STATUS_UPDATE_INTERVAL = 30
STOP_LOSS_SETUP_INTERVAL = 300
POSITION_SYNC_INTERVAL = 30
INACTIVE_BOT_CLEANUP_INTERVAL = 600

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π (–±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞)
try:
    from bot_engine.bot_config import SystemConfig
except:
    class SystemConfig:
        AUTO_SAVE_INTERVAL = 60

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
try:
    from bots_modules.imports_and_globals import should_log_message
    from bots_modules.sync_and_cache import (
        save_bots_state, update_process_state, save_auto_bot_config,
        update_bots_cache_data, check_missing_stop_losses,
        cleanup_inactive_bots, check_trading_rules_activation
    )
    from bots_modules.maturity import save_mature_coins_storage
    from bots_modules.filters import process_auto_bot_signals
except ImportError as e:
    print(f"Warning: Could not import functions in workers: {e}")
    def should_log_message(category, message, interval_seconds=60):
        return (True, message)
    def save_bots_state():
        return True
    def save_mature_coins_storage():
        pass
    def update_process_state(name, data):
        pass
    def save_auto_bot_config():
        pass
    def update_bots_cache_data():
        pass
    def check_missing_stop_losses():
        pass
    def cleanup_inactive_bots():
        pass
    def check_trading_rules_activation():
        pass
    def process_auto_bot_signals(exchange_obj=None):
        pass

def auto_save_worker():
    """–í–æ—Ä–∫–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    interval = SystemConfig.AUTO_SAVE_INTERVAL
    logger.info(f"[AUTO_SAVE] üíæ –ó–∞–ø—É—Å–∫ Auto Save Worker (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ {interval} —Å–µ–∫—É–Ω–¥)")
    
    while not shutdown_flag.is_set():
        try:
            # –ñ–¥–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if shutdown_flag.wait(interval):
                break
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            with bots_data_lock:
                bots_count = len(bots_data['bots'])
            
            if bots_count > 0:
                # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–ª–∏ –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ 5 –º–∏–Ω—É—Ç
                should_log = (getattr(auto_save_worker, '_last_log_time', 0) + 300 < time.time())
                if should_log:
                    logger.info(f"[AUTO_SAVE] üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è {bots_count} –±–æ—Ç–æ–≤...")
                    auto_save_worker._last_log_time = time.time()
                save_result = save_bots_state()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç
                save_mature_coins_storage()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                update_process_state('auto_save_worker', {
                    'last_save': datetime.now().isoformat(),
                    'save_count': process_state['auto_save_worker']['save_count'] + 1,
                    'last_error': None if save_result else 'Save failed'
                })
            
        except Exception as e:
            logger.error(f"[AUTO_SAVE] ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    logger.info("[AUTO_SAVE] üíæ Auto Save Worker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def auto_bot_worker():
    """–í–æ—Ä–∫–µ—Ä –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ Auto Bot —Å–∏–≥–Ω–∞–ª–æ–≤"""
    logger.info("[AUTO_BOT] üö´ Auto Bot Worker –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è")
    logger.info("[AUTO_BOT] üí° –ê–≤—Ç–æ–±–æ—Ç –ù–ï –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    logger.info("[AUTO_BOT] üí° –í–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –í–†–£–ß–ù–£–Æ —á–µ—Ä–µ–∑ UI –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã")
    
    # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–±–æ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ!
    with bots_data_lock:
        auto_bot_enabled = bots_data['auto_bot_config']['enabled']
    
    if auto_bot_enabled:
        logger.warning("[AUTO_BOT] ‚ö†Ô∏è –ê–≤—Ç–æ–±–æ—Ç –±—ã–ª –≤–∫–ª—é—á–µ–Ω! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫–ª—é—á–∞–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
        with bots_data_lock:
            bots_data['auto_bot_config']['enabled'] = False
            save_auto_bot_config()
        logger.warning("[AUTO_BOT] üîí –ê–≤—Ç–æ–±–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω. –í–∫–ª—é—á–∏—Ç–µ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ UI.")
    
    logger.info("[AUTO_BOT] ‚úÖ –ê–≤—Ç–æ–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä—É—á–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É —á–µ—Ä–µ–∑ UI")
    
    # –í—Ö–æ–¥–∏–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª - –ù–û –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –∞–≤—Ç–æ–±–æ—Ç –≤–∫–ª—é—á–µ–Ω –≤—Ä—É—á–Ω—É—é
    last_position_update = time.time() - BOT_STATUS_UPDATE_INTERVAL
    last_stop_loss_setup = time.time() - STOP_LOSS_SETUP_INTERVAL
    last_position_sync = time.time() - POSITION_SYNC_INTERVAL
    last_inactive_cleanup = time.time() - INACTIVE_BOT_CLEANUP_INTERVAL
    
    logger.info("[AUTO_BOT] üîÑ –í—Ö–æ–¥–∏–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª (–∞–≤—Ç–æ–±–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω, –∂–¥–µ–º —Ä—É—á–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è)...")
    while not shutdown_flag.is_set():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
            with bots_data_lock:
                check_interval_seconds = bots_data['auto_bot_config']['check_interval']
                auto_bot_enabled = bots_data['auto_bot_config']['enabled']
            
            # –ñ–¥–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if shutdown_flag.wait(check_interval_seconds):
                break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–≥–Ω–∞–ª—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Auto Bot –≤–∫–ª—é—á–µ–Ω
            if auto_bot_enabled:
                # –ü–æ–¥–∞–≤–ª—è–µ–º —á–∞—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏–≥–Ω–∞–ª–æ–≤
                should_log, log_message = should_log_message(
                    'auto_bot_signals', 
                    f"üîç –†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Auto Bot —Å–∏–≥–Ω–∞–ª–æ–≤ (–∫–∞–∂–¥—ã–µ {check_interval_seconds} —Å–µ–∫)",
                    interval_seconds=300  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç
                )
                if should_log:
                    logger.info(f"[AUTO_BOT] {log_message}")
                
                logger.info(f"[AUTO_BOT] üöÄ –í—ã–∑—ã–≤–∞–µ–º process_auto_bot_signals...")
                process_auto_bot_signals(exchange_obj=exchange)
                logger.info(f"[AUTO_BOT] ‚úÖ process_auto_bot_signals –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                current_count = process_state.get('auto_bot_worker', {}).get('check_count', 0)
                update_process_state('auto_bot_worker', {
                    'last_check': datetime.now().isoformat(),
                    'check_count': current_count + 1,
                    'interval_seconds': check_interval_seconds,
                    'enabled': True
                })
            else:
                logger.info(f"[AUTO_BOT] ‚èπÔ∏è Auto Bot –≤—ã–∫–ª—é—á–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É (—Å–ª–µ–¥—É—é—â–∞—è —á–µ—Ä–µ–∑ {check_interval_seconds} —Å–µ–∫)")
                update_process_state('auto_bot_worker', {
                    'last_check': datetime.now().isoformat(),
                    'enabled': False,
                    'interval_seconds': check_interval_seconds
                })
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∑–∏—Ü–∏–π –∫–∞–∂–¥—ã–µ BOT_STATUS_UPDATE_INTERVAL —Å–µ–∫—É–Ω–¥ (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç Auto Bot)
            current_time = time.time()
            time_since_last_update = current_time - last_position_update
            # –ü–æ–¥–∞–≤–ª—è–µ–º —á–∞—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            should_log_time, log_time_message = should_log_message(
                'position_update_time', 
                f"–í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {time_since_last_update:.1f}—Å (–Ω—É–∂–Ω–æ {BOT_STATUS_UPDATE_INTERVAL}—Å)",
                interval_seconds=300  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç
            )
            if should_log_time:
                logger.info(f"[POSITION_UPDATE] {log_time_message}")
            
            if time_since_last_update >= BOT_STATUS_UPDATE_INTERVAL:
                # –ü–æ–¥–∞–≤–ª—è–µ–º —á–∞—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—ç—à–∞
                should_log, log_message = should_log_message(
                    'position_update', 
                    f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ {BOT_STATUS_UPDATE_INTERVAL} —Å–µ–∫)",
                    interval_seconds=300  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç
                )
                if should_log:
                    logger.info(f"[BOTS_CACHE] {log_message}")
                
                update_bots_cache_data()
                last_position_update = current_time
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ø-–ª–æ—Å—Å—ã –∫–∞–∂–¥—ã–µ STOP_LOSS_SETUP_INTERVAL —Å–µ–∫—É–Ω–¥
            time_since_stop_setup = current_time - last_stop_loss_setup
            if time_since_stop_setup >= STOP_LOSS_SETUP_INTERVAL:
                logger.info(f"[STOP_LOSS_SETUP] üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤ (–∫–∞–∂–¥—ã–µ {STOP_LOSS_SETUP_INTERVAL//60} –º–∏–Ω)")
                check_missing_stop_losses()
                last_stop_loss_setup = current_time
            
            # –£–º–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–π —Å –±–∏—Ä–∂–µ–π –∫–∞–∂–¥—ã–µ POSITION_SYNC_INTERVAL —Å–µ–∫—É–Ω–¥ - –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–ê
            # time_since_sync = current_time - last_position_sync
            # if time_since_sync >= POSITION_SYNC_INTERVAL:
            #     logger.info(f"[POSITION_SYNC] üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–π —Å –±–∏—Ä–∂–µ–π (–∫–∞–∂–¥—ã–µ {POSITION_SYNC_INTERVAL//60} –º–∏–Ω)")
            #     sync_positions_with_exchange()
            #     last_position_sync = current_time
            
            # –û—á–∏—â–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã –∫–∞–∂–¥—ã–µ INACTIVE_BOT_CLEANUP_INTERVAL —Å–µ–∫—É–Ω–¥
            time_since_cleanup = current_time - last_inactive_cleanup
            if time_since_cleanup >= INACTIVE_BOT_CLEANUP_INTERVAL:
                logger.info(f"[INACTIVE_CLEANUP] üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ {INACTIVE_BOT_CLEANUP_INTERVAL//60} –º–∏–Ω)")
                cleanup_inactive_bots()
                
                # –£–î–ê–õ–ï–ù–û: –û—á–∏—Å—Ç–∫–∞ –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç - –∑—Ä–µ–ª–æ—Å—Ç—å –Ω–µ–æ–±—Ä–∞—Ç–∏–º–∞!
                
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏ –¥–ª—è –∑—Ä–µ–ª—ã—Ö –º–æ–Ω–µ—Ç
                check_trading_rules_activation()
                
                last_inactive_cleanup = current_time
            
        except Exception as e:
            logger.error(f"[AUTO_BOT] ‚ùå –û—à–∏–±–∫–∞ Auto Bot Worker: {e}")
            update_process_state('auto_bot_worker', {
                'last_error': str(e),
                'last_check': datetime.now().isoformat()
            })
    
    logger.info("[AUTO_BOT] üõë Auto Bot Worker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

