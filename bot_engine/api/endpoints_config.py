"""
API endpoints –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Auto Bot –∏ —Å–∏—Å—Ç–µ–º—ã
"""

from flask import request, jsonify
import logging
from datetime import datetime

logger = logging.getLogger('API_Config')


# –°–ª–æ–≤–∞—Ä—å —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
CONFIG_NAMES = {
    # Auto Bot Configuration
    'enabled': 'Auto Bot –≤–∫–ª—é—á–µ–Ω',
    'max_concurrent': '–ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤',
    'default_position_size': '–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (USDT)',
    'rsi_long_threshold': 'RSI –ø–æ—Ä–æ–≥ –¥–ª—è LONG',
    'rsi_short_threshold': 'RSI –ø–æ—Ä–æ–≥ –¥–ª—è SHORT',
    'rsi_time_filter_enabled': 'RSI Time Filter (—Ñ–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏)',
    'rsi_time_filter_candles': 'RSI Time Filter - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π',
    'avoid_down_trend': '–§–∏–ª—å—Ç—Ä DOWN —Ç—Ä–µ–Ω–¥–∞ –¥–ª—è LONG',
    'avoid_up_trend': '–§–∏–ª—å—Ç—Ä UP —Ç—Ä–µ–Ω–¥–∞ –¥–ª—è SHORT',
    'trend_detection_enabled': '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ',
    'min_candles_for_maturity': '–ú–∏–Ω–∏–º—É–º —Å–≤–µ—á–µ–π –¥–ª—è –∑—Ä–µ–ª–æ—Å—Ç–∏',
    'min_rsi_low': '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π RSI Low –¥–ª—è –∑—Ä–µ–ª–æ—Å—Ç–∏',
    'max_rsi_high': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π RSI High –¥–ª—è –∑—Ä–µ–ª–æ—Å—Ç–∏',
    'tp_percent': 'Take Profit (%)',
    'sl_percent': 'Stop Loss (%)',
    'leverage': '–ü–ª–µ—á–æ',
    
    # System Configuration
    'rsi_update_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è RSI (—Å–µ–∫)',
    'auto_save_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Å–µ–∫)',
    'debug_mode': '–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏',
    'auto_refresh_ui': '–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI',
    'refresh_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI (—Å–µ–∫)',
    'position_sync_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–π (—Å–µ–∫)',
    'inactive_bot_cleanup_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤ (—Å–µ–∫)',
    'inactive_bot_timeout': '–¢–∞–π–º–∞—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞ (—Å–µ–∫)',
    'stop_loss_setup_interval': '–ò–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Stop Loss (—Å–µ–∫)',
    'enhanced_rsi_enabled': '–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ RSI',
    'enhanced_rsi_require_volume_confirmation': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–º',
    'enhanced_rsi_require_divergence_confirmation': '–°—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º (–¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏)',
    'enhanced_rsi_use_stoch_rsi': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Stochastic RSI',
}


def log_config_change(key, old_value, new_value, description=""):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å"""
    if old_value != new_value:
        arrow = '‚Üí'
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        display_name = description or CONFIG_NAMES.get(key, key)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º print –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è ANSI –∫–æ–¥–æ–≤
        print(f"\033[92m[CONFIG] ‚úì {display_name}: {old_value} {arrow} {new_value}\033[0m")
        return True
    return False


def register_config_endpoints(app, state):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç endpoints –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    
    Args:
        app: Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        state: –°–ª–æ–≤–∞—Ä—å —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    """
    
    @app.route('/api/bots/auto-bot', methods=['GET', 'POST'])
    def auto_bot_config():
        """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Auto Bot"""
        try:
            if request.method == 'GET':
                with state['bots_data_lock']:
                    config = state['bots_data']['auto_bot_config'].copy()
                    return jsonify({
                        'success': True,
                        'config': config
                    })
            
            elif request.method == 'POST':
                data = request.get_json()
                if not data:
                    return jsonify({'success': False, 'error': 'No data provided'}), 400
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –∑—Ä–µ–ª–æ—Å—Ç–∏
                maturity_params_changed = False
                maturity_keys = ['min_candles_for_maturity', 'min_rsi_low', 'max_rsi_high']
                changes_count = 0
                
                with state['bots_data_lock']:
                    old_config = state['bots_data']['auto_bot_config'].copy()
                    
                    for key in maturity_keys:
                        if key in data and data[key] != old_config.get(key):
                            maturity_params_changed = True
                            logger.warning(f"[MATURITY] ‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω –∫—Ä–∏—Ç–µ—Ä–∏–π –∑—Ä–µ–ª–æ—Å—Ç–∏: {key} ({old_config.get(key)} ‚Üí {data[key]})")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                    for key, value in data.items():
                        if key in state['bots_data']['auto_bot_config']:
                            old_value = state['bots_data']['auto_bot_config'][key]
                            if old_value != value:
                                state['bots_data']['auto_bot_config'][key] = value
                                changes_count += 1
                                
                                # –ò—Å–ø–æ–ª—å–∑—É–µ–º log_config_change —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                                log_config_change(key, old_value, value)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                save_result = state['save_auto_bot_config_func']()
                
                # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if changes_count > 0:
                    print(f"\033[92m[CONFIG] ‚úÖ Auto Bot: –∏–∑–º–µ–Ω–µ–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {changes_count}, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\033[0m")
                else:
                    logger.info("[CONFIG] ‚ÑπÔ∏è  Auto Bot: –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
                
                # –û—á–∏—â–∞–µ–º –∑—Ä–µ–ª—ã–µ –º–æ–Ω–µ—Ç—ã –µ—Å–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
                if maturity_params_changed:
                    logger.warning("[MATURITY] –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω—ã - –æ—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–∞")
                    state['clear_mature_coins_func']()
                
                # –õ–æ–≥–∏—Ä—É–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
                if 'enabled' in data and old_config.get('enabled') == False and data['enabled'] == True:
                    logger.info("=" * 80)
                    print("\033[92müü¢ AUTO BOT –í–ö–õ–Æ–ß–ï–ù! üü¢\033[0m")
                    logger.info("=" * 80)
                elif 'enabled' in data and old_config.get('enabled') == True and data['enabled'] == False:
                    logger.info("=" * 80)
                    print("\033[91müî¥ AUTO BOT –í–´–ö–õ–Æ–ß–ï–ù! üî¥\033[0m")
                    logger.info("=" * 80)
                
                return jsonify({
                    'success': True,
                    'message': '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Auto Bot –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
                    'config': state['bots_data']['auto_bot_config'].copy(),
                    'saved_to_file': save_result
                })
                
        except Exception as e:
            logger.error(f"[ERROR] –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Auto Bot: {str(e)}")
            return jsonify({'success': False, 'error': str(e)}), 500
    
    @app.route('/api/bots/auto-bot/restore-defaults', methods=['POST'])
    def restore_auto_bot_defaults():
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Auto Bot"""
        try:
            logger.info("[API] –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            
            result = state['restore_default_config_func']()
            
            if result:
                with state['bots_data_lock']:
                    current_config = state['bots_data']['auto_bot_config'].copy()
                
                return jsonify({
                    'success': True,
                    'message': '–î–µ—Ñ–æ–ª—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
                    'config': current_config
                })
            else:
                return jsonify({
                    'success': False,
                    'error': '–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
                }), 500
                
        except Exception as e:
            logger.error(f"[ERROR] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {str(e)}")
            return jsonify({'success': False, 'error': str(e)}), 500
    
    @app.route('/api/bots/default-config', methods=['GET'])
    def get_default_config():
        """–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Auto Bot"""
        try:
            default_config = state['load_default_config_func']()
            
            return jsonify({
                'success': True,
                'default_config': default_config,
                'message': '–î–µ—Ñ–æ–ª—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞'
            })
            
        except Exception as e:
            logger.error(f"[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
            return jsonify({'success': False, 'error': str(e)}), 500
    
    @app.route('/api/bots/system-config', methods=['GET', 'POST'])
    def system_config():
        """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        try:
            if request.method == 'GET':
                config_data = state['get_system_config_func']()
                return jsonify({
                    'success': True,
                    'config': config_data
                })
            
            elif request.method == 'POST':
                data = request.get_json()
                if not data:
                    return jsonify({'success': False, 'error': 'No data provided'}), 400
                
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                old_config = state['get_system_config_func']()
                changes_count = 0
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                for key, new_value in data.items():
                    old_value = old_config.get(key)
                    if log_config_change(key, old_value, new_value):
                        changes_count += 1
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                state['update_system_config_func'](data)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º
                saved = state['save_system_config_func'](data)
                
                # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if changes_count > 0:
                    print(f"\033[92m[CONFIG] ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {changes_count}, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\033[0m")
                else:
                    logger.info("[CONFIG] ‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
                
                return jsonify({
                    'success': True,
                    'message': '–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
                    'config': data,
                    'saved_to_file': saved
                })
                
        except Exception as e:
            logger.error(f"[ERROR] –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã: {str(e)}")
            return jsonify({'success': False, 'error': str(e)}), 500
    
    logger.info("[API] Config endpoints registered")


